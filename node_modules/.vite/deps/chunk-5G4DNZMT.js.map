{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAutocomplete/VAutocomplete.tsx", "../../vuetify/src/composables/filter.tsx"],
  "sourcesContent": ["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { highlightResult, makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  clearOnSelect: Boolean,\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (value: any) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const selectionIndex = shallowRef(-1)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(() => vTextFieldRef.value?.color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const hasChips = computed(() => !!(props.chips || slots.chip))\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection)\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (form.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value?.selectionStart\n      const length = model.value.length\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (\n        highlightFirst.value &&\n        ['Enter', 'Tab'].includes(e.key) &&\n        !model.value.some(({ value }) => value === displayItems.value[0].value)\n      ) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (\n          !props.multiple &&\n          hasSelectionSlot.value &&\n          model.value.length > 0 &&\n          !search.value\n        ) return select(model.value[0], false)\n\n        if (~selectionIndex.value) {\n          e.preventDefault()\n          const originalSelectionIndex = selectionIndex.value\n          select(model.value[selectionIndex.value], false)\n\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1\n        }\n\n        return\n      }\n\n      if (!props.multiple) return\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          const searchLength = search.value?.length ?? null\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(searchLength, searchLength)\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(0, 0)\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1\n      }\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple && !hasSelectionSlot.value)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    /** @param set - null means toggle */\n    function select (item: ListItem | undefined, set: boolean | null = true) {\n      if (!item || item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n\n        if (props.clearOnSelect) {\n          search.value = ''\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n        search.value = add && !hasSelectionSlot.value ? item.title : ''\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = (props.multiple || hasSelectionSlot.value) ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && search.value == null) model.value = []\n        menu.value = false\n        if (props.multiple || hasSelectionSlot.value) search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!hasSelectionSlot.value,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ form.isReadonly.value }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependAvatar && (\n                                    <VAvatar image={ item.props.prependAvatar } />\n                                  )}\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult('v-autocomplete', item.title, getMatches(item)?.title)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips.value\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips.value ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                    tabindex=\"-1\"\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n", "/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, shallowRef, unref, watchEffect } from 'vue'\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\n/**\n * - boolean: match without highlight\n * - number: single match (index), length already known\n * - []: single match (start, end)\n * - [][]: multiple matches (start, end), shouldn't overlap\n */\nexport type FilterMatchArraySingle = readonly [number, number]\nexport type FilterMatchArrayMultiple = readonly FilterMatchArraySingle[]\nexport type FilterMatchArray = FilterMatchArraySingle | FilterMatchArrayMultiple\nexport type FilterMatch = boolean | number | FilterMatchArray\nexport type FilterFunction = (value: string, query: string, item?: InternalItem) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\nexport interface InternalItem<T = any> {\n  value: any\n  raw: T\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n  if (!query.length) return 0\n\n  value = value.toString().toLocaleLowerCase()\n  query = query.toString().toLocaleLowerCase()\n\n  const result = []\n  let idx = value.indexOf(query)\n  while (~idx) {\n    result.push([idx, idx + query.length] as const)\n\n    idx = value.indexOf(query, idx + query.length)\n  }\n\n  return result.length ? result : -1\n}\n\nfunction normaliseMatch (match: FilterMatch, query: string): FilterMatchArrayMultiple | undefined {\n  if (match == null || typeof match === 'boolean' || match === -1) return\n  if (typeof match === 'number') return [[match, match + query.length]]\n  if (Array.isArray(match[0])) return match as FilterMatchArrayMultiple\n  return [match] as FilterMatchArrayMultiple\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: readonly (readonly [item: InternalItem, transformed: {}])[] | readonly InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatchArrayMultiple | undefined> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const [item, transformed = item] = wrapInArray(items[i]) as readonly [InternalItem, {}]\n    const customMatches: Record<string, FilterMatchArrayMultiple | undefined> = {}\n    const defaultMatches: Record<string, FilterMatchArrayMultiple | undefined> = {}\n    let match: FilterMatch = -1\n\n    if ((query || customFiltersLength > 0) && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(transformed)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(transformed, key)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = normaliseMatch(match, query)\n            else defaultMatches[key] = normaliseMatch(match, query)\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = normaliseMatch(match, query)\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined> | (() => string | undefined),\n  options?: {\n    transform?: (item: T) => {}\n    customKeyFilter?: MaybeRef<FilterKeyFunctions | undefined>\n  }\n) {\n  const filteredItems = shallowRef<T[]>([])\n  const filteredMatches = shallowRef(new Map<unknown, Record<string, FilterMatchArrayMultiple | undefined>>())\n  const transformedItems = computed(() => (\n    options?.transform\n      ? unref(items).map(item => ([item, options.transform!(item)] as const))\n      : unref(items)\n  ))\n\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query)\n    const strQuery = (\n      typeof _query !== 'string' &&\n      typeof _query !== 'number'\n    ) ? '' : String(_query)\n\n    const results = filterItems(\n      transformedItems.value,\n      strQuery,\n      {\n        customKeyFilter: {\n          ...props.customKeyFilter,\n          ...unref(options?.customKeyFilter),\n        },\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    const originalItems = unref(items)\n\n    const _filteredItems: typeof filteredItems['value'] = []\n    const _filteredMatches: typeof filteredMatches['value'] = new Map()\n    results.forEach(({ index, matches }) => {\n      const item = originalItems[index]\n      _filteredItems.push(item)\n      _filteredMatches.set(item.value, matches)\n    })\n    filteredItems.value = _filteredItems\n    filteredMatches.value = _filteredMatches\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n\nexport function highlightResult (name: string, text: string, matches: FilterMatchArrayMultiple | undefined) {\n  if (matches == null || !matches.length) return text\n\n  return matches.map((match, i) => {\n    const start = i === 0 ? 0 : matches[i - 1][1]\n    const result = [\n      <span class={ `${name}__unmask` }>{ text.slice(start, match[0]) }</span>,\n      <span class={ `${name}__mask` }>{ text.slice(match[0], match[1]) }</span>,\n    ]\n    if (i === matches.length - 1) {\n      result.push(<span class={ `${name}__unmask` }>{ text.slice(match[1]) }</span>)\n    }\n    return <>{ result }</>\n  })\n}\n"],
  "mappings": "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",
  "names": ["defaultFilter", "value", "query", "item", "length", "toString", "toLocaleLowerCase", "result", "idx", "indexOf", "push", "normaliseMatch", "match", "Array", "isArray", "makeFilterProps", "propsFactory", "customFilter", "Function", "customKeyFilter", "Object", "filterKeys", "String", "filterMode", "type", "default", "noFilter", "Boolean", "filterItems", "items", "options", "array", "filter", "keys", "wrapInArray", "customFiltersLength", "loop", "i", "transformed", "customMatches", "defaultMatches", "key", "getPropertyFromItem", "keyFilter", "title", "defaultMatchesLength", "customMatchesLength", "index", "matches", "useFilter", "props", "filteredItems", "shallowRef", "filteredMatches", "Map", "transformedItems", "computed", "transform", "unref", "map", "watchEffect", "_query", "strQuery", "results", "originalItems", "_filteredItems", "_filteredMatches", "forEach", "_ref", "set", "getMatches", "get", "highlightResult", "name", "text", "start", "_createVNode", "slice", "_Fragment", "makeVAutocompleteProps", "propsFactory", "autoSelectFirst", "type", "Boolean", "String", "clearOnSelect", "search", "makeFilterProps", "filterKeys", "makeSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "VAutocomplete", "genericComponent", "name", "props", "emits", "focused", "value", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "isFocused", "shallowRef", "isPristine", "listHasFocus", "vMenuRef", "vVirtualScrollRef", "selectionIndex", "items", "transformIn", "transformOut", "useItems", "textColorClasses", "textColorStyles", "useTextColor", "color", "useProxiedModel", "model", "v", "wrapInArray", "transformed", "multiple", "counterValue", "computed", "length", "form", "useForm", "filteredItems", "getMatches", "useFilter", "displayItems", "hideSelected", "filter", "filteredItem", "some", "s", "hasChips", "chips", "chip", "hasSelectionSlot", "selection", "selectedValues", "map", "highlightFirst", "selectFirst", "title", "menuDisabled", "hideNoData", "isReadonly", "isDisabled", "_menu", "menu", "get", "set", "Î¨openChildren", "size", "label", "closeText", "openText", "listRef", "listEvents", "useScrolling", "onClear", "e", "openOnClear", "onMousedownControl", "onMousedownMenuIcon", "preventDefault", "stopPropagation", "onListKeydown", "key", "checkPrintable", "focus", "onKeydown", "selectionStart", "includes", "_ref2", "select", "originalSelectionIndex", "prev", "searchLength", "setSelectionRange", "next", "onChange", "matchesSelector", "item", "find", "target", "onAfterEnter", "eager", "calculateVisibleItems", "onAfterLeave", "onFocusin", "setTimeout", "onFocusout", "onUpdateModelValue", "isSelecting", "arguments", "undefined", "disabled", "index", "findIndex", "valueComparator", "deepEqual", "add", "splice", "nextTick", "watch", "val", "oldVal", "at", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "newVal", "useRender", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "_createVNode", "_mergeProps", "$event", "externalValue", "class", "style", "placeholder", "default", "_Fragment", "VMenu", "menuProps", "VList", "itemColor", "listProps", "VListItem", "noDataText", "VVirtualScroll", "_ref3", "itemRef", "itemProps", "mergeProps", "active", "onClick", "prepend", "_ref4", "isSelected", "VCheckboxBtn", "prependAvatar", "VAvatar", "prependIcon", "VIcon", "highlightResult", "onChipClose", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "closableChips", "VDefaultsProvider", "closable", "text", "_createTextVNode", "_len", "args", "Array", "_key", "menuIcon", "fieldIconColor", "noop", "forwardRefs"]
}
